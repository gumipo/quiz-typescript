[{"/Users/hayakawahideto/Documents/Github_origin/quiz-typescript/src/index.tsx":"1","/Users/hayakawahideto/Documents/Github_origin/quiz-typescript/src/reportWebVitals.ts":"2","/Users/hayakawahideto/Documents/Github_origin/quiz-typescript/src/App.tsx":"3","/Users/hayakawahideto/Documents/Github_origin/quiz-typescript/src/serviceWorker.ts":"4","/Users/hayakawahideto/Documents/Github_origin/quiz-typescript/src/reducks/Store/store.ts":"5","/Users/hayakawahideto/Documents/Github_origin/quiz-typescript/src/Router.tsx":"6","/Users/hayakawahideto/Documents/Github_origin/quiz-typescript/src/reducks/Quiz/reducers.ts":"7","/Users/hayakawahideto/Documents/Github_origin/quiz-typescript/src/reducks/Quiz/actions.ts":"8","/Users/hayakawahideto/Documents/Github_origin/quiz-typescript/src/reducks/Store/intialState.ts":"9","/Users/hayakawahideto/Documents/Github_origin/quiz-typescript/src/Pages/index.ts":"10","/Users/hayakawahideto/Documents/Github_origin/quiz-typescript/src/Pages/Correct.tsx":"11","/Users/hayakawahideto/Documents/Github_origin/quiz-typescript/src/Pages/Mistake.tsx":"12","/Users/hayakawahideto/Documents/Github_origin/quiz-typescript/src/Pages/Home.tsx":"13","/Users/hayakawahideto/Documents/Github_origin/quiz-typescript/src/Pages/StartQuiz.tsx":"14","/Users/hayakawahideto/Documents/Github_origin/quiz-typescript/src/reducks/Quiz/selector.ts":"15","/Users/hayakawahideto/Documents/Github_origin/quiz-typescript/src/Component/UIkit/Button.tsx":"16","/Users/hayakawahideto/Documents/Github_origin/quiz-typescript/src/Component/UIkit/Card.tsx":"17","/Users/hayakawahideto/Documents/Github_origin/quiz-typescript/src/Component/Footer/Footer.tsx":"18","/Users/hayakawahideto/Documents/Github_origin/quiz-typescript/src/reducks/Quiz/operations.ts":"19","/Users/hayakawahideto/Documents/Github_origin/quiz-typescript/src/Component/Loading.tsx":"20","/Users/hayakawahideto/Documents/Github_origin/quiz-typescript/src/Pages/TermQuiz.tsx":"21"},{"size":615,"mtime":1607603755593,"results":"22","hashOfConfig":"23"},{"size":425,"mtime":1606894356338,"results":"24","hashOfConfig":"23"},{"size":278,"mtime":1607603755578,"results":"25","hashOfConfig":"23"},{"size":5290,"mtime":1607603755598,"results":"26","hashOfConfig":"23"},{"size":668,"mtime":1607603755597,"results":"27","hashOfConfig":"23"},{"size":598,"mtime":1607603755586,"results":"28","hashOfConfig":"23"},{"size":830,"mtime":1608775036497,"results":"29","hashOfConfig":"23"},{"size":1478,"mtime":1607603755594,"results":"30","hashOfConfig":"23"},{"size":141,"mtime":1607603755597,"results":"31","hashOfConfig":"23"},{"size":240,"mtime":1607603755585,"results":"32","hashOfConfig":"23"},{"size":6531,"mtime":1607603755582,"results":"33","hashOfConfig":"23"},{"size":6570,"mtime":1607603755583,"results":"34","hashOfConfig":"23"},{"size":7187,"mtime":1607603755583,"results":"35","hashOfConfig":"23"},{"size":656,"mtime":1608774456036,"results":"36","hashOfConfig":"23"},{"size":551,"mtime":1607603755596,"results":"37","hashOfConfig":"23"},{"size":1141,"mtime":1607603755580,"results":"38","hashOfConfig":"23"},{"size":1490,"mtime":1607603755581,"results":"39","hashOfConfig":"23"},{"size":497,"mtime":1607603755579,"results":"40","hashOfConfig":"23"},{"size":1991,"mtime":1607603755595,"results":"41","hashOfConfig":"23"},{"size":4066,"mtime":1607603755580,"results":"42","hashOfConfig":"23"},{"size":3828,"mtime":1608774229837,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1h5kh2e",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"46"},"/Users/hayakawahideto/Documents/Github_origin/quiz-typescript/src/index.tsx",[],["93","94"],"/Users/hayakawahideto/Documents/Github_origin/quiz-typescript/src/reportWebVitals.ts",[],["95","96"],"/Users/hayakawahideto/Documents/Github_origin/quiz-typescript/src/App.tsx",[],"/Users/hayakawahideto/Documents/Github_origin/quiz-typescript/src/serviceWorker.ts",[],"/Users/hayakawahideto/Documents/Github_origin/quiz-typescript/src/reducks/Store/store.ts",[],"/Users/hayakawahideto/Documents/Github_origin/quiz-typescript/src/Router.tsx",[],"/Users/hayakawahideto/Documents/Github_origin/quiz-typescript/src/reducks/Quiz/reducers.ts",[],"/Users/hayakawahideto/Documents/Github_origin/quiz-typescript/src/reducks/Quiz/actions.ts",["97","98","99","100","101"],"import { Quiz } from \"./types\";\n\nexport const ActionTypes = {\n  FETCH_QUIZZES_ID: \"FETCH_QUIZZES_ID\",\n  FETCH_RANDOM_CHOICES: \"FETCH_RANDOM_CHOICES\",\n  RESET_CHOICES: \"RESET_CHOICES\",\n  FETCH_RANDOM_ANSWER: \"FETCH_RANDOM_ANSWER\",\n  SELECTED_ANSWER: \"SELECTED_ANSWER\",\n} as const;\n\nexport const fetchQuizzesIdAction = (id: string[]) => {\n  return {\n    type: \"FETCH_QUIZZES_ID\",\n    payload: id,\n  };\n};\n\ntype fetchQuizzesIdAction = ReturnType<typeof fetchQuizzesIdAction>;\n\nexport const fetchRandomChoicesAction = (choices: Quiz[]) => {\n  return {\n    type: \"FETCH_RANDOM_CHOICES\",\n    payload: choices,\n  };\n};\ntype fetchRandomChoicesAction = ReturnType<typeof fetchRandomChoicesAction>;\n\nexport const RESET_CHOICES = \"RESET_CHOICES\";\nexport const resetChoicesAction = () => {\n  return {\n    type: \"RESET_CHOICES\",\n    payload: [],\n  };\n};\ntype resetChoicesAction = ReturnType<typeof resetChoicesAction>;\n\nexport const fetchRandomAnswerAction = (answer: Quiz) => {\n  return {\n    type: \"FETCH_RANDOM_ANSWER\",\n    payload: answer,\n  };\n};\ntype fetchRandomAnswerAction = ReturnType<typeof fetchRandomAnswerAction>;\n\nexport const selectedAnswerAction = (selectAnswer: string) => {\n  return {\n    type: \"SELECTED_ANSWER\",\n    payload: selectAnswer,\n  };\n};\n\ntype selectedAnswerAction = ReturnType<typeof selectedAnswerAction>;\n\nexport type Actions =\n  | fetchQuizzesIdAction\n  | fetchRandomChoicesAction\n  | resetChoicesAction\n  | fetchRandomAnswerAction\n  | selectedAnswerAction;\n","/Users/hayakawahideto/Documents/Github_origin/quiz-typescript/src/reducks/Store/intialState.ts",[],"/Users/hayakawahideto/Documents/Github_origin/quiz-typescript/src/Pages/index.ts",[],"/Users/hayakawahideto/Documents/Github_origin/quiz-typescript/src/Pages/Correct.tsx",["102"],"import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Card from \"../Component/UIkit/Card\";\nimport smile from \"../assets/Image/smile.svg\";\nimport sparkle from \"../assets/Image/sparkle.svg\";\nimport sparkleMedium from \"../assets/Image/sparkle-medium.svg\";\n// import Twemoji from \"react-twemoji\";\nimport Button from \"../Component/UIkit/Button\";\nimport Footer from \"../Component/Footer/Footer\";\nimport {\n  getQuizChoices,\n  getQuizAnswer,\n  getSelectedAnswer,\n} from \"../reducks/Quiz/selector\";\nimport { resetChoicesAction } from \"../reducks/Quiz/actions\";\nimport { Quiz } from \"../reducks/Quiz/types\";\n\nconst Correct: React.FC = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const selector = useSelector((state) => state);\n  const choices = getQuizChoices(selector);\n  const answer = getQuizAnswer(selector);\n  const selectAnswer = getSelectedAnswer(selector);\n\n  const [commentaries, setCommentaries] = useState<Quiz[]>([]);\n\n  useEffect(() => {\n    const commentaryTitle = choices.filter(\n      (item: Quiz) => item.title !== answer.title\n    );\n    setCommentaries(commentaryTitle);\n  }, []);\n\n  return (\n    <StyledSection>\n      <StyledCorrect>\n        <StyledBackground />\n        <StyledCorrectTitle>\n          {/* <Twemoji options={{ className: \"twemoji\" }}>🥳</Twemoji>\n          <h1>正解</h1>\n          <Twemoji options={{ className: \"twemoji\" }}>🎉</Twemoji> */}\n        </StyledCorrectTitle>\n        <Card\n          title={answer.title}\n          description={answer.description}\n          url={answer.url}\n          selectAnswer={selectAnswer}\n        />\n        <StyledCaracterArea>\n          <StyledCaracterIconArea>\n            <img src={smile} alt=\"character\" />\n          </StyledCaracterIconArea>\n          <StyledCaracterCommentArea>\n            <p>\n              正解おめでとう！\n              <br />\n              この調子！\n            </p>\n          </StyledCaracterCommentArea>\n        </StyledCaracterArea>\n        <StyledCommentary>\n          <h2>他の選択肢の解説はこちら</h2>\n          <StyledCommentaryNav>\n            {commentaries.map((commentary, index) => (\n              <li key={index}>\n                <a href={commentary.url} target=\"_brank\">\n                  {commentary.title}\n                </a>\n              </li>\n            ))}\n          </StyledCommentaryNav>\n        </StyledCommentary>\n\n        <Button\n          fill={true}\n          label=\"次の問題に挑戦する\"\n          onClick={() => {\n            dispatch(resetChoicesAction());\n            history.push(\"/quiz\");\n          }}\n        />\n\n        <StyledFooterArea>\n          <Footer label=\"用語サイトに移動する\" />\n        </StyledFooterArea>\n      </StyledCorrect>\n    </StyledSection>\n  );\n};\n\nexport default Correct;\n\nconst StyledSection = styled.section`\n  width: 100%;\n  display: grid;\n  place-items: center;\n`;\n\nconst StyledCorrect = styled.div`\n  text-align: center;\n  width: 375px;\n  background-color: white;\n  position: relative;\n  z-index: 1;\n  overflow: hidden;\n  @media screen and (min-width: 640px) {\n    width: 640px;\n    height: 1024px;\n  }\n`;\n\nconst StyledBackground = styled.div`\n  width: 100%;\n  height: 254px;\n  position: absolute;\n  background-color: #6fcf97;\n  z-index: -1;\n  top: 0;\n  ::after {\n    content: url(${sparkle});\n    @media screen and (min-width: 640px) {\n      content: url(${sparkleMedium});\n    }\n  }\n  ::before {\n    content: \"\";\n    background-color: white;\n    width: 479px;\n    height: 229px;\n    position: absolute;\n    top: 172px;\n    left: -52px;\n    border-radius: 50%;\n    @media screen and (min-width: 640px) {\n      width: 817.49px;\n      left: -88.75px;\n    }\n  }\n`;\n\nconst StyledCorrectTitle = styled.div`\n  width: 144px;\n  margin: 40px auto 32px auto;\n  display: flex;\n  align-items: center;\n  h1 {\n    width: 72px;\n    font-weight: bold;\n    font-size: 28px;\n    margin: 2px 0 auto 0;\n    color: white;\n    text-shadow: 0px 0px 4px rgba(0, 0, 0, 0.25);\n  }\n  img {\n    width: 36px;\n    height: 36px;\n  }\n`;\nconst StyledCaracterArea = styled.div`\n  width: 327px;\n  height: 80px;\n  margin: 22px auto 0 auto;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst StyledCaracterIconArea = styled.div`\n  background-color: #6fcf97;\n  width: 80px;\n  height: 80px;\n  border-radius: 40px;\n  display: grid;\n  place-items: center;\n  border: 2px solid #ffffff;\n  box-sizing: border-box;\n`;\n\nconst StyledCaracterCommentArea = styled.div`\n  width: 231px;\n  height: 74px;\n  display: flex;\n  align-items: center;\n  text-align: left;\n  position: relative;\n  background: #ffffff;\n  border: 2px solid #552b89;\n  border-radius: 11px;\n  box-sizing: border-box;\n\n  ::before,\n  ::after {\n    right: 100%;\n    top: 50%;\n    border: solid transparent;\n    content: \"\";\n    height: 0;\n    width: 0;\n    position: absolute;\n    pointer-events: none;\n  }\n  ::before {\n    border-color: rgba(255, 255, 255, 0);\n    border-right-color: #ffffff;\n    border-width: 11px;\n    margin-top: -11px;\n    z-index: 1;\n    transform: translateX(3px);\n  }\n  ::after {\n    border-color: rgba(85, 43, 137, 0);\n    border-right-color: #552b89;\n    border-width: 11px;\n    margin-top: -11px;\n  }\n  p {\n    width: 200px;\n    font-size: 17px;\n    color: #552b89;\n    margin: 10px auto 10px 16px;\n    line-height: 160%;\n  }\n`;\n\nconst StyledCommentary = styled.div`\n  width: 100%;\n  text-align: left;\n  @media screen and (min-width: 640px) {\n    width: 640px;\n    margin-top: 10px;\n    margin-left: 130px;\n  }\n\n  h2 {\n    font-size: 20px;\n    font-weight: bold;\n    margin: 34px 31px 0 22px;\n  }\n`;\n\nconst StyledCommentaryNav = styled.ul`\n  font-family: \"Roboto\";\n  margin: 8px auto 32px 29px;\n  font-size: 18px;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: space-around;\n  padding-left: 5px;\n  li {\n    list-style-type: none;\n    position: relative;\n    padding-left: 0.6em;\n    ::before {\n      content: \"\";\n      border-radius: 50%;\n      width: 4px;\n      height: 4px;\n      display: block;\n      position: absolute;\n      left: 0;\n      top: 0.7rem;\n      padding: 0;\n      background: black;\n    }\n  }\n\n  a {\n    font-size: 17px;\n    margin-bottom: 24px;\n    :link {\n      color: #506bf7;\n    }\n    :visited {\n      color: #552b89;\n    }\n  }\n`;\n\nconst StyledFooterArea = styled.footer`\n  margin: 32px auto 103px auto;\n`;\n","/Users/hayakawahideto/Documents/Github_origin/quiz-typescript/src/Pages/Mistake.tsx",["103"],"import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Card from \"../Component/UIkit/Card\";\nimport sad from \"../assets/Image/sad.svg\";\nimport decoration from \"../assets/Image/decoration.svg\";\nimport decorationMedium from \"../assets/Image/decorationMedium.svg\";\n// import Twemoji from \"react-twemoji\";\nimport Button from \"../Component/UIkit/Button\";\nimport Footer from \"../Component/Footer/Footer\";\nimport {\n  getQuizChoices,\n  getQuizAnswer,\n  getSelectedAnswer,\n} from \"../reducks/Quiz/selector\";\nimport { resetChoicesAction } from \"../reducks/Quiz/actions\";\nimport { Quiz } from \"../reducks/Quiz/types\";\n\nconst Mistake: React.FC = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const selector = useSelector((state) => state);\n  const choices = getQuizChoices(selector);\n  const answer = getQuizAnswer(selector);\n  const selectAnswer = getSelectedAnswer(selector);\n\n  const [commentaries, setCommentaries] = useState<Quiz[]>([]);\n\n  useEffect(() => {\n    const commentaryTitle = choices.filter(\n      (item: Quiz) => item.title !== answer.title\n    );\n    setCommentaries(commentaryTitle);\n  }, []);\n\n  return (\n    <StyledSection>\n      <StyledMistake>\n        <StyledBackground />\n        <StyledMistakeTitle>\n          {/* <Twemoji options={{ className: \"twemoji\" }}>😭</Twemoji>\n          <h1>不正解</h1>\n          <Twemoji options={{ className: \"twemoji\" }}>😭</Twemoji> */}\n        </StyledMistakeTitle>\n        <Card\n          title={answer.title}\n          description={answer.description}\n          url={answer.url}\n          selectAnswer={selectAnswer}\n        />\n        <StyledCaracterArea>\n          <StyledCaracterIconArea>\n            <img src={sad} alt=\"character\" />\n          </StyledCaracterIconArea>\n          <StyledCaracterCommentArea>\n            <p>\n              次は正解を目指して\n              <br />\n              頑張ろう！\n            </p>\n          </StyledCaracterCommentArea>\n        </StyledCaracterArea>\n        <StyledCommentary>\n          <h2>他の選択肢の解説はこちら</h2>\n          <StyledCommentaryNav>\n            {commentaries.map((commentary, index) => (\n              <li key={index}>\n                <a href={commentary.url} target=\"_brank\">\n                  {commentary.title}\n                </a>\n              </li>\n            ))}\n          </StyledCommentaryNav>\n        </StyledCommentary>\n        <Button\n          fill={true}\n          label=\"もう一度クイズに挑戦する\"\n          onClick={() => {\n            dispatch(resetChoicesAction());\n            history.push(\"/quiz\");\n          }}\n        />\n        <StyledFooterArea>\n          <Footer label=\"用語サイトに移動する\" />\n        </StyledFooterArea>\n      </StyledMistake>\n    </StyledSection>\n  );\n};\n\nexport default Mistake;\n\nconst StyledSection = styled.section`\n  width: 100%;\n  display: grid;\n  place-items: center;\n`;\n\nconst StyledMistake = styled.div`\n  text-align: center;\n  width: 375px;\n  background-color: white;\n  position: relative;\n  z-index: 1;\n  overflow: hidden;\n  @media screen and (min-width: 640px) {\n    width: 640px;\n    height: 1024px;\n  }\n`;\n\nconst StyledBackground = styled.div`\n  width: 100%;\n  height: 254px;\n  position: absolute;\n  background: rgba(80, 96, 134, 0.7);\n  z-index: -1;\n  top: 0;\n  ::after {\n    content: url(${decoration});\n    @media screen and (min-width: 640px) {\n      content: url(${decorationMedium});\n    }\n  }\n\n  ::before {\n    content: \"\";\n    background-color: white;\n    width: 479px;\n    height: 229px;\n    position: absolute;\n    top: 172px;\n    left: -52px;\n    border-radius: 50%;\n    @media screen and (min-width: 640px) {\n      width: 817.49px;\n      left: -88.75px;\n    }\n  }\n`;\n\nconst StyledMistakeTitle = styled.div`\n  width: 172px;\n  margin: 40px auto 32px auto;\n  display: flex;\n  align-items: center;\n  h1 {\n    width: 100px;\n    font-weight: bold;\n    font-size: 28px;\n    margin: 2px 0 auto 0;\n    color: white;\n    text-shadow: 0px 0px 4px rgba(0, 0, 0, 0.25);\n  }\n  img {\n    width: 36px;\n    height: 36px;\n  }\n`;\nconst StyledCaracterArea = styled.div`\n  width: 327px;\n  height: 80px;\n  margin: 22px auto 0 auto;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst StyledCaracterIconArea = styled.div`\n  background: rgba(0, 0, 0, 0.08);\n  width: 80px;\n  height: 80px;\n  border-radius: 40px;\n  display: grid;\n  place-items: center;\n  border: 2px solid #ffffff;\n  box-sizing: border-box;\n`;\n\nconst StyledCaracterCommentArea = styled.div`\n  width: 231px;\n  height: 74px;\n  display: flex;\n  align-items: center;\n  text-align: left;\n  position: relative;\n  background: #ffffff;\n  border: 2px solid #552b89;\n  border-radius: 8px;\n  box-sizing: border-box;\n\n  ::before,\n  ::after {\n    right: 100%;\n    top: 50%;\n    border: solid transparent;\n    content: \"\";\n    height: 0;\n    width: 0;\n    position: absolute;\n    pointer-events: none;\n  }\n  ::before {\n    border-color: rgba(255, 255, 255, 0);\n    border-right-color: #ffffff;\n    border-width: 11px;\n    margin-top: -11px;\n    z-index: 1;\n    transform: translateX(3px);\n  }\n  ::after {\n    border-color: rgba(85, 43, 137, 0);\n    border-right-color: #552b89;\n    border-width: 11px;\n    margin-top: -11px;\n  }\n  p {\n    width: 200px;\n    font-size: 17px;\n    color: #552b89;\n    margin: 10px auto 10px 16px;\n    line-height: 160%;\n  }\n`;\n\nconst StyledCommentary = styled.div`\n  width: 100%;\n  text-align: left;\n  @media screen and (min-width: 640px) {\n    width: 640px;\n    margin-top: 10px;\n    margin-left: 130px;\n  }\n\n  h2 {\n    font-size: 20px;\n    font-weight: bold;\n    margin: 34px 31px 0 22px;\n  }\n`;\n\nconst StyledCommentaryNav = styled.ul`\n  font-family: \"Roboto\";\n  margin: 8px auto 32px 29px;\n  font-size: 18px;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: space-around;\n  padding-left: 5px;\n  li {\n    list-style-type: none;\n    position: relative;\n    padding-left: 0.6em;\n    ::before {\n      content: \"\";\n      border-radius: 50%;\n      width: 4px;\n      height: 4px;\n      display: block;\n      position: absolute;\n      left: 0;\n      top: 0.7rem;\n      padding: 0;\n      background: black;\n    }\n  }\n\n  a {\n    font-size: 17px;\n    margin-bottom: 24px;\n    :link {\n      color: #506bf7;\n    }\n    :visited {\n      color: #552b89;\n    }\n  }\n`;\nconst StyledFooterArea = styled.footer`\n  margin: 32px auto 103px auto;\n`;\n","/Users/hayakawahideto/Documents/Github_origin/quiz-typescript/src/Pages/Home.tsx",[],"/Users/hayakawahideto/Documents/Github_origin/quiz-typescript/src/Pages/StartQuiz.tsx",["104"],"import React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { getQuizzesId } from \"../reducks/Quiz/selector\";\nimport { useHistory } from \"react-router-dom\";\n\ntype Props = {\n  children: React.ReactNode;\n};\n\ntype StartQuizType = (children: Props) => any;\n\nconst StartQuiz: StartQuizType = ({ children }) => {\n  const history = useHistory();\n  const selector = useSelector((state) => state);\n  const id = getQuizzesId(selector);\n\n  useEffect(() => {\n    if (id.length === 0) {\n      history.push(\"/\");\n    }\n  }, []);\n\n  if (id.length === 0) {\n    return <></>;\n  } else {\n    return children;\n  }\n};\nexport default StartQuiz;\n","/Users/hayakawahideto/Documents/Github_origin/quiz-typescript/src/reducks/Quiz/selector.ts",[],"/Users/hayakawahideto/Documents/Github_origin/quiz-typescript/src/Component/UIkit/Button.tsx",[],"/Users/hayakawahideto/Documents/Github_origin/quiz-typescript/src/Component/UIkit/Card.tsx",[],"/Users/hayakawahideto/Documents/Github_origin/quiz-typescript/src/Component/Footer/Footer.tsx",[],"/Users/hayakawahideto/Documents/Github_origin/quiz-typescript/src/reducks/Quiz/operations.ts",[],"/Users/hayakawahideto/Documents/Github_origin/quiz-typescript/src/Component/Loading.tsx",[],"/Users/hayakawahideto/Documents/Github_origin/quiz-typescript/src/Pages/TermQuiz.tsx",["105","106"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Button from \"../Component/UIkit/Button\";\nimport {\n  getQuizChoices,\n  getQuizAnswer,\n  getQuizzesId,\n} from \"../reducks/Quiz/selector\";\nimport { randomQuizzesSet, fetchQuizzesId } from \"../reducks/Quiz/operations\";\nimport { selectedAnswerAction } from \"../reducks/Quiz/actions\";\nimport Loading from \"../Component/Loading\";\nimport { Quiz } from \"../reducks/Quiz/types\";\n\nconst TermQuiz: React.FC = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const selector = useSelector((state) => state);\n  const [isLoading, setIsLoading] = useState(false);\n  const id = getQuizzesId(selector);\n  const choices = getQuizChoices(selector);\n  const answer = getQuizAnswer(selector);\n\n  const resultJudgment = (index: number) => {\n    const selectAnswer = choices[index].title;\n    dispatch(selectedAnswerAction(selectAnswer));\n\n    if (selectAnswer === answer.title) {\n      history.push(\"/correct\");\n    } else {\n      history.push(\"/mistake\");\n    }\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n    dispatch(fetchQuizzesId());\n  }, []);\n\n  //Todo:2回発火するのを修正\n  useEffect(() => {\n    if (id.length === 0) {\n      return;\n    }\n    dispatch(randomQuizzesSet());\n  }, [id.length]);\n\n  useEffect(() => {\n    if (choices.length === 0) {\n      return;\n    }\n    setIsLoading(false);\n  }, [choices]);\n\n  return (\n    <>\n      {isLoading ? (\n        <Loading />\n      ) : (\n        <StyledSection>\n          <StyledQuizWrap>\n            <StyledBackground />\n            <StyledTitle>説明に合う用語はどれ？</StyledTitle>\n            <StyledDescriptionArea>\n              <p>{answer.description}</p>\n            </StyledDescriptionArea>\n            <StyledButtonArea>\n              {choices.length > 0 &&\n                choices.map((choice: Quiz, index: number) => (\n                  <Button\n                    fill={false}\n                    key={index}\n                    label={choice.title}\n                    onClick={() => resultJudgment(index)}\n                  />\n                ))}\n            </StyledButtonArea>\n          </StyledQuizWrap>\n        </StyledSection>\n      )}\n    </>\n  );\n};\nexport default TermQuiz;\n\nconst StyledSection = styled.section`\n  width: 100%;\n  display: grid;\n  place-items: center;\n`;\n\nconst StyledQuizWrap = styled.div`\n  position: relative;\n  width: 375px;\n  overflow: hidden;\n  background-color: white;\n  z-index: 1;\n  @media screen and (min-width: 640px) {\n    width: 640px;\n    height: 1024px;\n  }\n`;\n\nconst StyledBackground = styled.div`\n  width: 100%;\n  height: 254px;\n  background: linear-gradient(90deg, #9b51e0 0%, #bb6bd9 100%);\n  position: absolute;\n  z-index: -1;\n  ::before {\n    content: \"\";\n    background-color: white;\n    width: 479px;\n    height: 229px;\n    position: absolute;\n    top: 172px;\n    left: -52px;\n    border-radius: 50%;\n    @media screen and (min-width: 640px) {\n      width: 817.49px;\n      left: -88.75px;\n    }\n  }\n`;\n\nconst StyledTitle = styled.h1`\n  width: 342px;\n  height: 38px;\n  text-align: center;\n  font-size: 28px;\n  margin: 40px auto 32px auto;\n  color: white;\n  z-index: 2;\n`;\n\nconst StyledDescriptionArea = styled.div`\n  width: 327px;\n  margin: 0 auto;\n  border-radius: 8px;\n  box-shadow: 0px 4px 16px rgba(44, 18, 76, 0.2);\n  background-color: white;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  p {\n    font-size: 17px;\n    width: 295px;\n    height: 54;\n    line-height: 160%;\n  }\n`;\n\nconst StyledButtonArea = styled.div`\n  width: 297px;\n  height: 320px;\n  margin: 27px auto 108px auto;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n",{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"107","replacedBy":"111"},{"ruleId":"109","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":18,"column":6,"nodeType":"115","messageId":"116","endLine":18,"endColumn":26},{"ruleId":"113","severity":1,"message":"117","line":26,"column":6,"nodeType":"115","messageId":"116","endLine":26,"endColumn":30},{"ruleId":"113","severity":1,"message":"118","line":35,"column":6,"nodeType":"115","messageId":"116","endLine":35,"endColumn":24},{"ruleId":"113","severity":1,"message":"119","line":43,"column":6,"nodeType":"115","messageId":"116","endLine":43,"endColumn":29},{"ruleId":"113","severity":1,"message":"120","line":52,"column":6,"nodeType":"115","messageId":"116","endLine":52,"endColumn":26},{"ruleId":"121","severity":1,"message":"122","line":35,"column":6,"nodeType":"123","endLine":35,"endColumn":8,"suggestions":"124"},{"ruleId":"121","severity":1,"message":"122","line":35,"column":6,"nodeType":"123","endLine":35,"endColumn":8,"suggestions":"125"},{"ruleId":"121","severity":1,"message":"126","line":21,"column":6,"nodeType":"123","endLine":21,"endColumn":8,"suggestions":"127"},{"ruleId":"121","severity":1,"message":"128","line":39,"column":6,"nodeType":"123","endLine":39,"endColumn":8,"suggestions":"129"},{"ruleId":"121","severity":1,"message":"128","line":47,"column":6,"nodeType":"123","endLine":47,"endColumn":17,"suggestions":"130"},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],["131"],["132"],"@typescript-eslint/no-redeclare","'fetchQuizzesIdAction' is already defined.","Identifier","redeclared","'fetchRandomChoicesAction' is already defined.","'resetChoicesAction' is already defined.","'fetchRandomAnswerAction' is already defined.","'selectedAnswerAction' is already defined.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'answer.title' and 'choices'. Either include them or remove the dependency array.","ArrayExpression",["133"],["134"],"React Hook useEffect has missing dependencies: 'history' and 'id.length'. Either include them or remove the dependency array.",["135"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["136"],["137"],"no-global-assign","no-unsafe-negation",{"desc":"138","fix":"139"},{"desc":"138","fix":"140"},{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},"Update the dependencies array to be: [answer.title, choices]",{"range":"147","text":"148"},{"range":"149","text":"148"},"Update the dependencies array to be: [history, id.length]",{"range":"150","text":"151"},"Update the dependencies array to be: [dispatch]",{"range":"152","text":"153"},"Update the dependencies array to be: [dispatch, id.length]",{"range":"154","text":"155"},[1265,1267],"[answer.title, choices]",[1269,1271],[542,544],"[history, id.length]",[1255,1257],"[dispatch]",[1387,1398],"[dispatch, id.length]"]